@use "sass:meta";
$max-vw: 1440px;
$medium-vw: 1280px;
$min-vw: 1024px;
$namespace: rq;
$component: null;

@mixin laptop {
  @media screen and (max-width: $medium-vw) {
    @content;
  }
}

@mixin full-vw {
  width: 100%;
  min-width: $medium-vw;
  @media screen and (max-width: 600px) {
    width: 100vw;
    min-width: auto;
    max-width: 100vw;
  }
}

@mixin text(
  $color: rqthemify(--text-normal),
  $font-size: 14,
  $line-height: 1.5
) {
  font-size: $font-size + px;
  color: $color;
  line-height: $line-height;
  font-weight: 500;
}

@mixin rg-text($color: rqthemify(--text-normal)) {
  @include text($color, 16);
  font-weight: 400;
}

@mixin mini-text($color: rqthemify(--text-normal), $font-weight: 300) {
  @include text($color, 12);
  font-weight: $font-weight;
}

@mixin h1($color: rqthemify(--text-normal)) {
  @include text($color, 36);
  font-weight: 500;
}

@mixin h2($color: rqthemify(--text-normal)) {
  @include text($color, 26);
  font-weight: 400;
}

@mixin h3($color: rqthemify(--text-normal)) {
  @include text($color, 24);
  font-weight: 500;
}

@mixin h4($color: rqthemify(--text-normal)) {
  @include text($color, 20);
  font-weight: 500;
}

@mixin h5($color: rqthemify(--text-normal)) {
  @include text($color, 18);
  font-weight: 700;
}

@mixin t-center-vertical {
  top: 50%;
  transform: translateY(-50%);
}

@mixin t-center {
  top: 50%;
  left: 50%;
  transform: translateX(-50%) translateY(-50%);
}

@mixin f-center($justify-content: center, $align-items: center) {
  display: flex;
  justify-content: $justify-content;
  align-items: $align-items;
}

@mixin f-column($align-item: center) {
  display: flex;
  justify-content: center;
  align-items: $align-item;
  flex-direction: column;
}

@mixin debug {
  box-sizing: border-box;
  border: 1px solid gold;
  * {
    box-sizing: border-box;
    border: 1px solid gold;
  }
}

@mixin hover($color: rqthemify(--primary-color)) {
  cursor: pointer;
  transition: color 0.1s;
  &:hover {
    color: $color;
  }
}

@mixin hover-scale {
  cursor: pointer;
  transition: all 0.2s;
  &:hover {
    transform: scale(1.02);
    box-shadow: 0px 0 12px 0px rqthemify(--shadow-primary);
  }
}

@mixin click-scale {
  transition: all 0.2s;
  &:active {
    transform: scale(1.1);
  }
}

@mixin img-center {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

@mixin flex-item {
  position: relative;
  box-sizing: border-box;
  padding-top: 20px;
  @for $i from 1 through 6 {
    &.col-#{$i} {
      width: (100% / $i);
      &:nth-child(#{$i}n + 1) {
        padding-left: 0;
      }
    }
  }
  & + & {
    padding-left: 20px;
  }
}

@mixin reset {
  ::v-deep {
    button {
      cursor: pointer;
      outline: none;
      background: transparent;
      border: none;
      color: inherit;
      @include click-scale;
    }
    p {
      margin: 0;
    }
    &,
    [class^="rq"] {
      box-sizing: border-box;
    }
  }
}
@mixin block($block) {
  $name: $namespace;

  @if ($component) {
    $name: $name + "-" + $component;
  }
  @if $block {
    $name: $name + "-" + $block;
  }
  .#{$name} {
    @content;
  }
}

@mixin root {
  ::v-deep {
    button {
      cursor: pointer;
      outline: none;
      background: transparent;
      border: none;
      color: inherit;
      @include click-scale;
    }
    p {
      margin: 0;
    }
    [class^="rq"] {
      box-sizing: border-box;
    }
  }
}
